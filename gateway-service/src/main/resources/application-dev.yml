server:
  port: 8082

spring:
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  output:
    ansi:
      enabled: always
  application:
    name: gateway-service
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  cloud:
    config:
      enabled: false
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes:
      - id: employee-service
        uri: lb://employee-service
        predicates:
        - Path=/employee/**
        filters:
        - RewritePath=/employee/(?<path>.*), /$\{path}
        - AddRequestHeader=X-SVC-KEY, emp-1234-5678
        - AddRequestHeader=X-SVC-AUTH, authorization
        - AddRequestHeader=UserDetail, {"username":"emp user","name":"Roy Ding 01","email":"rd@yahoo.com","roles":[{"id":1,"name":"role-01"},{"id":2,"name":"role-02"},{"id":3,"name":"role-03"}]}
        - name: AuthorizationPreFilter
          args:
           groups: Admin, Roy2
           
      - id: department-service
        uri: lb://department-service
        predicates:
        - Path=/department/**
        filters:
        - RewritePath=/department/(?<path>.*), /$\{path}
        - AddRequestHeader=X-SVC-KEY, dep-1234-5678
        - AddRequestHeader=X-SVC-AUTH, authorization
        - AddRequestHeader=UserDetail, {"username":"depart-user","name":"Roy Ding 02","email":"rd@yahoo.com","roles":[{"id":1,"name":"role-01"},{"id":2,"name":"role-02"},{"id":3,"name":"role-03"}]}
        - name: AuthorizationPreFilter
          args:
           groups: Admin, Roy2
           
      - id: kafka-consumer-service
        uri: lb://kafka-consumer-service
        predicates:
        - Path=/consumer/**
        filters:
        - RewritePath=/consumer/(?<path>.*), /$\{path}
        - AddRequestHeader=X-SVC-KEY, kafka-consumer-1234-5678
        - name: AuthorizationPreFilter
          args:
           groups: Admin, Roy2
           
      - id: kafka-producer-service
        uri: lb://kafka-producer-service
        predicates:
        - Path=/producer/**
        filters:
        - RewritePath=/producer/(?<path>.*), /$\{path}
        - AddRequestHeader=X-SVC-KEY, kafka-producer-1234-5678
        - name: AuthorizationPreFilter
          args:
           groups: Admin, Roy2
           
      - id: webflux-oracle-service
        uri: lb://webflux-oracle-service
        predicates:
        - Path=/webflux-oracle/**
        filters:
        - RewritePath=/webflux-oracle/(?<path>.*), /$\{path}
        - AddRequestHeader=X-SVC-KEY, wf-oracle-1234-5678
        - name: AuthorizationPreFilter
          args:
           groups: Admin, Roy2
           
      - id: openapi
        uri: http://localhost:${server.port}
        predicates:
        - Path=/v3/api-docs/**
        filters:
        - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs
        

eureka:
  client:
    enabled: true
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}         

springdoc:
  swagger-ui:
    path: /
    urls:
      - name: employee
        url: /v3/api-docs/employee
      - name: department
        url: /v3/api-docs/department
      - name: consumer
        url: /v3/api-docs/consumer
      - name: producer
        url: /v3/api-docs/producer
      - name: webflux-oracle
        url: /v3/api-docs/webflux-oracle
        
auth:
  check-url: true
  check-auth: true
  token:
    header: X-SVC-AUTH
    header-url: URL
    header-url-value: http://localhost
  svcKey: api-gateway-1234-5678   
    
management:
  tracing:
    sampling:
      probability: 1.0
      
logging:
  pattern: 
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n"
              
security:
  jwt:
    secret-key: my-secret
    expiration-time-milliseconds: 100000000
      