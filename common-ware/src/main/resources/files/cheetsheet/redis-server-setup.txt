
Install redis on windows ubuntu:

type 
c:>ubuntu
to start the ubuntu on windows. (rding/myLinux123)

1. install redis as the following:

curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list

sudo apt-get update
sudo apt-get install redis

2. start redis server:

sudo service redis-server start

3.	Connect to Redis
You can test that your Redis server is running by connecting with the Redis CLI:

$redis-cli 
127.0.0.1:6379> ping
PONG

4. stop redis server:

127.0.0.1:6379>shutdown

5. check if redis service is running
$redis-cli ping
PONG ---running
not connected ---not running

sudo service redis-server stop

testing

running redis-server on Docker

Pull the Redis image: In the command prompt, type the following command to download the latest Redis image:

$docker pull redis


Creating a Redis Container
With the Redis image downloaded, we can now create a Redis container. Here are the steps to create a Redis container:

Create a new Redis container: In the command prompt, run the following command to create a new Redis container:

$docker run -p 6379:6379 --name my-redis -d redis


This command creates a new Redis container with the name “my-redis” and maps the container’s port 6379 to the host’s port 6379. The “-d” flag specifies that the container should run in detached mode.

Verify the Redis container is running: To check if the Redis container is running, run the following command in the command prompt:

$docker ps

This command lists all running containers. You should see the “my-redis container in the list, indicating that the Redis container is running.

Redis CLI: Redis provides a command-line interface (CLI) that can be used to interact with Redis. To access the Redis CLI, run the following command in the command prompt:

$docker exec -it my-redis redis-cli

This command retrieves the IP address of the Redis container.
$docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-redis


