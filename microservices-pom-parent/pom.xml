<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.1</version>
        <relativePath />
    </parent>

    <groupId>com.sample.microservices</groupId>
    <artifactId>microservices-pom-parent</artifactId>
    <version>3.0.0</version>
    <packaging>pom</packaging>
    <name>microservices-pom-parent</name>
    <description>microservices pom parent</description>

    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2022.0.3</spring-cloud.version>
        <spring-cloud-dep.version>4.0.0</spring-cloud-dep.version>
        <spring.boot.version>3.1.1</spring.boot.version>
        <spring-framework.version>6.0.11</spring-framework.version>
		<spring.security.version>6.1.2</spring.security.version>
		<spring-amqp.version>3.0.7</spring-amqp.version>
		<springdoc.version>2.1.0</springdoc.version>
    	<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
    	<org.projectlombok.version>1.18.26</org.projectlombok.version>
    	<jackson.version>2.15.2</jackson.version>
    	<mongodb.version>4.1.2</mongodb.version>
    	<reactor.version>3.5.8</reactor.version>
    	<jupiter.version>5.7.0</jupiter.version>
    	<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    	<maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
    	<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    	<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
    	<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    	<asciidoctor-maven-plugin.version>2.2.4</asciidoctor-maven-plugin.version>
    	<commonmark.version>0.21.0</commonmark.version>

    	<mockito-core.version>3.9.0</mockito-core.version>
    	<h2.version>2.2.220</h2.version>
    	<common-ware.version>3.0.0</common-ware.version>    
                
        <sonar.projectKey>sample-microservices-pkey</sonar.projectKey>
        <sonar.organization>com.sample</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    </properties>
  
    <dependencyManagement>
        <dependencies>
			
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
			<version>${spring.boot.version}</version>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring.boot.version}</version>
		</dependency>
		
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-r2dbc</artifactId> 
			<version>${spring.boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
	        <version>${spring.boot.version}</version>
        </dependency>

		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
	        <version>${spring.boot.version}</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
	        <version>${spring.boot.version}</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
			
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>    
                
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <version>${spring-cloud-dep.version}</version>
            <exclusions>
				<exclusion>
					<artifactId>jettison</artifactId>
					<groupId>org.codehaus.jettison</groupId>
				</exclusion>
			</exclusions>        
        </dependency>
        <dependency>
            <groupId>jettison</groupId>
            <artifactId>org.codehaus.jettison</artifactId>
            <version>1.5.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-eureka-client</artifactId>
            <version>${spring-cloud-dep.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter</artifactId>
            <version>${spring-cloud-dep.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <version>${spring-cloud-dep.version}</version>
        </dependency>
		<dependency>
	        <groupId>org.springframework.cloud</groupId>
	        <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-openfeign-core</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway-server</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-loadbalancer</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-context</artifactId>
            <version>${spring-cloud-dep.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>${spring.security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>${spring.security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>${spring.security.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-test</artifactId>
		    <version>${spring.security.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-aspects</artifactId>
		    <version>${spring-framework.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-context</artifactId>
		    <version>${spring-framework.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-beans</artifactId>
		    <version>${spring-framework.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework.ampq</groupId>
		    <artifactId>spring-ampq</artifactId>
		    <version>${spring-amqp.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.ampq</groupId>
		    <artifactId>spring-rabbit</artifactId>
		    <version>${spring-amqp.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-mongodb</artifactId>
		    <version>${mongodb.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
		</dependency>
			
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
	
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		    <version>${org.mapstruct.version}</version>
		</dependency>
			
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version>
			<optional>true</optional>
			<scope>provided</scope>
		</dependency>
	        	            
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${jackson.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${jackson.version}</version>
		</dependency>

		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotation</artifactId>
		    <version>${jackson.version}</version>
		</dependency>

		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-core</artifactId>
		    <version>${reactor.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
			<version>${mockito-core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
			<version>${h2.version}</version>
		</dependency>

		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>${jupiter.version}</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>${jupiter.version}</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.commonmark</groupId>
		    <artifactId>commonmark</artifactId>
		    <version>${commonmark.version}</version>
		</dependency>

        </dependencies>
    </dependencyManagement>
  
	<build>
		<pluginManagement>
		    <plugins>
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-dependency-plugin</artifactId>
		            <version>${maven-dependency-plugin.version}</version>
		            <configuration>
		            	<skip>true</skip>
		            </configuration>
		        </plugin>
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-deploy-plugin</artifactId>
		            <configuration>
		            	<skip>true</skip>
		            </configuration>
		        </plugin>
		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-compiler-plugin</artifactId>
		            <version>${maven-compiler-plugin.version}</version>
		            <configuration>
		                <source>${java.version}</source> <!-- depending on your project -->
		                <target>${java.version}</target> <!-- depending on your project -->
				        <fork>true</fork>
				        <compilerArgs>
				            <arg>-Xlint:all</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
				            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
				        </compilerArgs>
				        <!--for unmappable characters in classes-->
				        <encoding>UTF-8</encoding>
				        <showDeprecation>true</showDeprecation>
				        <showWarnings>true</showWarnings>
				        <!--for lombok annotations to resolve-->
				        <!--contradictory to maven, intelliJ fails with this-->
                        <annotationProcessorPaths>
		                    <path>
		                        <groupId>org.projectlombok</groupId>
		                        <artifactId>lombok</artifactId>
		                        <version>${org.projectlombok.version}</version>
		                    </path>
		                    <path>
		                        <groupId>org.mapstruct</groupId>
		                        <artifactId>mapstruct-processor</artifactId>
		                        <version>${org.mapstruct.version}</version>
		                    </path>
		                    <!-- other annotation processors -->
		                </annotationProcessorPaths>
		            </configuration>
		        </plugin>
		        
				<plugin>
				    <groupId>org.springframework.boot</groupId>
				    <artifactId>spring-boot-maven-plugin</artifactId>
			        <version>${spring.boot.version}</version>
				</plugin>
		        
		        <plugin>
		        	<groupId>org.sonarsource.scanner.maven</groupId>
		        	<artifactId>sonar-maven-plugin</artifactId>
		            <version>${sonar-maven-plugin.version}</version>
		        </plugin>

		        <plugin>
		        	<groupId>org.asciidoctor</groupId>
		        	<artifactId>asciidoctor-maven-plugin</artifactId>
		            <version>${asciidoctor-maven-plugin.version}</version>
		        </plugin>

		        <plugin>
		            <groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-surefire-plugin</artifactId>
		            <version>${maven-surefire-plugin.version}</version>
		            <configuration>
						<reuseForks>false</reuseForks>
					</configuration>
		        </plugin>
		        
		        <plugin>
				    <groupId>org.jacoco</groupId>
				    <artifactId>jacoco-maven-plugin</artifactId>
				    <version>${jacoco-maven-plugin.version}</version>
		            <configuration>
		            	<destfile>target/jacoco.exec</destfile>
		            	<datafile>target/jacoco.exec</datafile>
		            </configuration>
				    <executions>
				        <execution>
				        	<id>prepare-agent</id>
				            <goals>
				                <goal>prepare-agent</goal>
				            </goals>
				        </execution>
				        <execution>
				            <id>report</id>
				            <phase>test</phase>
				            <goals>
				                <goal>report</goal>
				            </goals>
				        </execution>
				    </executions>
	            </plugin>
		    </plugins>
	    </pluginManagement>
	</build>   
  
</project>